import 'package:meta/meta.dart';

/// Represents temperature prediction information from a probe.
///
/// This class contains prediction data generated by the probe's `PredictionManager`, including estimated time to reach
/// target temperature and other cooking predictions. Predictions are only available after a target temperature has
/// been set using  `DeviceManager.setTargetTemperature`.
@immutable
class PredictionInfo {
  /// The estimated time in seconds until the food reaches the target temperature.
  ///
  /// Returns null if no prediction is available or if the target temperature has already been reached.
  final int? estimatedTimeSeconds;

  /// The target temperature in Celsius that was set for this prediction.
  ///
  /// This is the temperature the probe is predicting the food will reach based on current cooking conditions and
  /// temperature trends.
  final double? targetTemperatureCelsius;

  /// The current core temperature in Celsius used for the prediction calculation.
  ///
  /// This represents the probe's best estimate of the food's internal temperature at the time the prediction was
  /// generated.
  final double? currentCoreTempCelsius;

  /// Whether the prediction is considered reliable based on current data quality.
  ///
  /// Predictions may be unreliable during the initial cooking phase when temperature trends are not yet established,
  /// or if the probe is experiencing connectivity issues.
  final bool isReliable;

  /// The timestamp when this prediction was generated.
  ///
  /// Used to determine the freshness of prediction data and for debugging prediction accuracy over time.
  final DateTime timestamp;

  /// Creates a [PredictionInfo] instance with the specified prediction data.
  ///
  /// All parameters except [isReliable] and [timestamp] are nullable to handle cases where predictions are not yet
  /// available or have been invalidated.
  const PredictionInfo({
    required this.isReliable,
    required this.timestamp,
    this.estimatedTimeSeconds,
    this.targetTemperatureCelsius,
    this.currentCoreTempCelsius,
  });

  /// Creates a [PredictionInfo] instance from a map received via platform channels.
  ///
  /// This factory constructor handles the conversion from native platform data to the Dart model, including proper
  /// type casting and null handling.
  ///
  /// Expected map structure:
  ///
  /// ```json
  /// {
  ///   "estimatedTimeSeconds": 1800,
  ///   "targetTemperatureCelsius": 65.0,
  ///   "currentCoreTempCelsius": 45.0,
  ///   "isReliable": true,
  ///   "timestampMillis": 1640995200000
  /// }
  /// ```
  factory PredictionInfo.fromMap(Map<String, dynamic> map) {
    final int? timestampMillis = map['timestampMillis'] as int?;
    final DateTime timestamp = timestampMillis != null
        ? DateTime.fromMillisecondsSinceEpoch(timestampMillis)
        : DateTime.now();

    return PredictionInfo(
      estimatedTimeSeconds: map['estimatedTimeSeconds'] as int?,
      targetTemperatureCelsius: (map['targetTemperatureCelsius'] as num?)
          ?.toDouble(),
      currentCoreTempCelsius: (map['currentCoreTempCelsius'] as num?)
          ?.toDouble(),
      isReliable: map['isReliable'] as bool? ?? false,
      timestamp: timestamp,
    );
  }
}
